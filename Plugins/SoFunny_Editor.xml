<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SoFunny_Editor</name>
    </assembly>
    <members>
        <member name="T:SoFunny.AccessToken">
             <summary>
             Represents an access token which is used to access the FUNNY Platform. Most API calls
             to the FUNNY Platform require an access token as evidence of successful authorization.
             A valid access token is issued after the user grants your app the permissions that
             your app requests. An access token is bound to permissions (scopes) that define the
             API endpoints that you can access. Choose the permissions for your channel in the
             FUNNY Developers site and set them in the login method used in your app.
            
             An access token expires after a certain period. `ExpiresIn` specifies the time until
             which this access token expires.
            
             By default, the FUNNY SDK stores access tokens in a secure place on the device running
             your app and obtains authorization when you access the FUNNY Platform through the
             framework request methods.
            
             Don't try to create an access token yourself. You can get the stored access token with
             fewer properties with `FunnySDK.CurrentAccessToken`.
             </summary>
            
        </member>
        <member name="P:SoFunny.AccessToken.Value">
             <summary>
             The value of the access token.
             </summary>
            
        </member>
        <member name="P:SoFunny.AccessToken.ExpiresIn">
             <summary>
             Number of seconds until the access token expires.
             </summary>
            
        </member>
        <member name="P:SoFunny.AccessToken.IdTokenRaw">
             <summary>
             The raw string value of the ID token bound to the access token. The
             value exists only if the access token is obtained with the "openID"
             permission.
             </summary>
            
        </member>
        <member name="P:SoFunny.AccessToken.RefreshToken">
             <summary>
             The refresh token bound to the access token.
             </summary>
            
        </member>
        <member name="P:SoFunny.AccessToken.Scope">
             <summary>
             Permissions granted by the user.
             </summary>
            
        </member>
        <member name="P:SoFunny.AccessToken.TokenType">
             <summary>
             The expected authorization type when this token is used in a request
             header. Fixed to "Bearer" for now.
             </summary>
            
        </member>
        <member name="P:SoFunny.ActCodeStatus.Enable">
            <summary>
            是否开启邀请码
            </summary>
        </member>
        <member name="P:SoFunny.ActCodeStatus.IsValid">
            <summary>
            激活码有效状态
            </summary>
        </member>
        <member name="P:SoFunny.ActCodeStatus.NeedSet">
            <summary>
            是否需要填写邀请码
            </summary>
        </member>
        <member name="T:SoFunny.BillboardStyle">
            <summary>
            公告 UI 样式
            </summary>
        </member>
        <member name="F:SoFunny.BillboardStyle.horizontal">
            <summary>
            横屏样式
            </summary>
        </member>
        <member name="F:SoFunny.BillboardStyle.vertical">
            <summary>
            竖屏样式
            </summary>
        </member>
        <member name="P:SoFunny.Certification.RealNameInfo.Adult">
            <summary>
            是否成年 true = 成年，false = 未成年
            </summary>
        </member>
        <member name="P:SoFunny.Certification.RealNameInfo.Status">
            <summary>
            认证状态
            </summary>
        </member>
        <member name="P:SoFunny.Certification.RealNameInfo.PI">
            <summary>
            中宣部唯一标识
            </summary>
        </member>
        <member name="P:SoFunny.Certification.RealNameInfo.RemainTime">
            <summary>
            剩余可游玩时间(秒)
            </summary>
        </member>
        <member name="T:SoFunny.Certification.RealNameStatus">
            <summary>
            实名认证状态
            </summary>
        </member>
        <member name="F:SoFunny.Certification.RealNameStatus.NotCertified">
            <summary>
            未认证
            </summary>
        </member>
        <member name="F:SoFunny.Certification.RealNameStatus.Certified">
            <summary>
            已认证
            </summary>
        </member>
        <member name="F:SoFunny.Certification.RealNameStatus.Waiting">
            <summary>
            认证当中等待结果
            </summary>
        </member>
        <member name="T:SoFunny.PrivacyProfileCancelledException">
            <summary>
            隐私信息授权已被用户取消
            </summary>
        </member>
        <member name="T:SoFunny.PrivacyProfileDisableException">
            <summary>
            隐私信息授权功能未开启
            </summary>
        </member>
        <member name="T:SoFunny.PrivacyProfilePlatformException">
            <summary>
            隐私信息授权平台出错
            </summary>
        </member>
        <member name="T:SoFunny.LoginCancelledException">
            <summary>
            登录流程已被取消
            </summary>
        </member>
        <member name="T:SoFunny.NotLoggedInException">
            <summary>
            未登录状态，无法使用服务
            </summary>
        </member>
        <member name="T:SoFunny.AccessTokenInvalidException">
            <summary>
            AccessToken 状态已过期或无效
            </summary>
        </member>
        <member name="T:SoFunny.FunnySDKException">
            <summary>
            FunnySDK 主要异常父类
            </summary>
        </member>
        <member name="F:SoFunny.FunnySDKException.Code">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="T:SoFunny.FunnyErrorLoginCancel">
             <summary>
             登录过程被用户取消
             </summary>
            
        </member>
        <member name="T:SoFunny.FunnyErrorNotLoggedIn">
             <summary>
             未登录账号
             </summary>
            
        </member>
        <member name="T:SoFunny.FunnyErrorTokenInvalid">
             <summary>
             AccessToken 无效或已过期
             </summary>
            
        </member>
        <member name="F:SoFunny.FunnyErrorCode.LOGIN_INVALID_OR_EXPIRED">
            <summary>
            登录验证已无效或已过期
            </summary>
        </member>
        <member name="F:SoFunny.FunnyErrorCode.NOT_LOGIN">
            <summary>
            没有登录账号
            </summary>
        </member>
        <member name="F:SoFunny.FunnyErrorCode.LOGIN_CANCEL">
            <summary>
            登录过程被主动取消
            </summary>
        </member>
        <member name="F:SoFunny.FunnyErrorCode.ACCESSTOKEN_INVALID">
            <summary>
            Token 已失效
            </summary>
        </member>
        <member name="F:SoFunny.FunnyErrorCode.PRIVACY_PROFILE_CANCEL">
            <summary>
            隐私信息授权被取消
            </summary>
        </member>
        <member name="F:SoFunny.FunnyErrorCode.PRIVACY_PROFILE_NOT_ENABLE">
            <summary>
            隐私信息授权未开启
            </summary>
        </member>
        <member name="F:SoFunny.FunnyErrorCode.PRIVACY_PROFILE_ERROR">
            <summary>
            隐私信息授权出错
            </summary>
        </member>
        <member name="M:SoFunny.FunnySDK.InitializeSDK(System.String)">
            <summary>
            FunnySDK 初始化方法
            </summary>
        </member>
        <member name="M:SoFunny.FunnySDK.Initialize">
            <summary>
            初始化 SDK 方法，请确保在 Funny 面板上已配置相关参数
            </summary>
        </member>
        <member name="M:SoFunny.FunnySDK.Login">
            <summary>
            发起登录流程，会打开对应登录 UI 界面
            </summary>
            <returns></returns>
            <exception cref="T:SoFunny.FunnySDKException"></exception>
            <exception cref="T:SoFunny.LoginCancelledException"></exception>
        </member>
        <member name="M:SoFunny.FunnySDK.Logout">
            <summary>
            登出当前账户
            </summary>
            <returns></returns>
        </member>
        <member name="M:SoFunny.FunnySDK.GetProfile">
            <summary>
            获取当前登录用户信息
            </summary>
            <returns>UserProfile</returns>
            <exception cref="T:SoFunny.NotLoggedInException"></exception>
            <exception cref="T:SoFunny.AccessTokenInvalidException"></exception>
        </member>
        <member name="M:SoFunny.FunnySDK.AuthPrivacyProfile">
            <summary>
            获取用户隐私信息 <br/>
            如用户未填写信息，则会展示填写 UI 界面
            </summary>
            <returns>PrivacyProfile</returns>
            <exception cref="T:SoFunny.FunnySDKException"></exception>
            <exception cref="T:SoFunny.PrivacyProfileCancelledException"></exception>
            <exception cref="T:SoFunny.PrivacyProfileDisableException"></exception>
            <exception cref="T:SoFunny.PrivacyProfilePlatformException"></exception>
        </member>
        <member name="M:SoFunny.FunnySDK.GetCurrentAccessToken">
            <summary>
            获取当前已登录用户 AccessToken
            </summary>
            <returns>AccessToken Or Null</returns>
        </member>
        <member name="M:SoFunny.FunnySDK.OpenUserCenterUI">
            <summary>
            打开个人中心界面
            </summary>
        </member>
        <member name="M:SoFunny.FunnySDK.CloseUserCenterUI">
            <summary>
            关闭个人中心界面
            </summary>
        </member>
        <member name="M:SoFunny.FunnySDK.OpenBillboardUI(SoFunny.BillboardStyle)">
            <summary>
            打开公告界面
            </summary>
            <param name="style">界面样式</param>
        </member>
        <member name="M:SoFunny.FunnySDK.AnyBillMessage">
            <summary>
            是否含有公告
            </summary>
            <returns></returns>
        </member>
        <member name="M:SoFunny.FunnySDK.OpenFeedbackUI(System.String)">
            <summary>
            打开反馈界面
            </summary>
            <param name="playerID">玩家编号</param>
        </member>
        <member name="M:SoFunny.FunnySDK.OpenProtocol">
            <summary>
            打开用户协议界面
            </summary>
            <returns>void</returns>
        </member>
        <member name="E:SoFunny.FunnySDK.OnLoginEvent">
            <summary>
            FunnySDK 用户登录后会调用该事件
            </summary>
        </member>
        <member name="E:SoFunny.FunnySDK.OnLogoutEvent">
            <summary>
            FunnySDK 用户登出后会调用该事件
            </summary>
        </member>
        <member name="E:SoFunny.FunnySDK.OnOpenUserCenterEvent">
            <summary>
            用户中心被打开后会调用该事件
            </summary>
        </member>
        <member name="E:SoFunny.FunnySDK.OnCloseUserCenterEvent">
            <summary>
            用户中心被关闭后会调用该事件
            </summary>
        </member>
        <member name="E:SoFunny.FunnySDK.OnGuestDidBindEvent">
            <summary>
            游客账号完成绑定后会调用该事件
            </summary>
        </member>
        <member name="E:SoFunny.FunnySDK.OnSwitchAccountEvent">
            <summary>
            当前账号切换到新账号后会调用该事件
            </summary>
        </member>
        <member name="E:SoFunny.FunnySDK.OnOpenBillboardEvent">
            <summary>
            公告面板被打开事件
            </summary>
        </member>
        <member name="E:SoFunny.FunnySDK.OnCloseBillboardEvent">
            <summary>
            公告面板被关闭事件
            </summary>
        </member>
        <member name="E:SoFunny.FunnySDK.OnOpenFeedbackEvent">
            <summary>
            反馈面板被打开事件
            </summary>
        </member>
        <member name="E:SoFunny.FunnySDK.OnCloseFeedbackEvent">
            <summary>
            反馈面板被关闭事件
            </summary>
        </member>
        <member name="E:SoFunny.FunnySDK.OnConfirmProtocolEvent">
            <summary>
            用户隐私协议同意事件
            </summary>
        </member>
        <member name="P:SoFunny.LimitConfig.AccountEnable">
            <summary>
            是否开启账号白名单
            </summary>
        </member>
        <member name="P:SoFunny.LimitConfig.AccountPass">
            <summary>
            账号白名单是否效验通过
            </summary>
        </member>
        <member name="P:SoFunny.LimitConfig.IpEnable">
            <summary>
            是否开启 IP 白名单
            </summary>
        </member>
        <member name="P:SoFunny.LimitConfig.IpPass">
            <summary>
            IP 白名单效验是否通过
            </summary>
        </member>
        <member name="P:SoFunny.LimitConfig.ZoneEnable">
            <summary>
            是否开启区域限制
            </summary>
        </member>
        <member name="P:SoFunny.LimitConfig.ZonePass">
            <summary>
            区域限制是否通过
            </summary>
        </member>
        <member name="P:SoFunny.LimitConfig.IsPassAny">
            <summary>
            任意限制效验是否通过
            </summary>
        </member>
        <member name="P:SoFunny.LoginLocalRecord.Nickname">
            <summary>
            第三方平台昵称
            </summary>
        </member>
        <member name="P:SoFunny.LoginLocalRecord.Profile">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:SoFunny.NativeInterface.Json">
             <summary>
             This class encodes and decodes JSON strings.
             Spec. details, see http://www.json.org/
            
             JSON uses Arrays and Objects. These correspond here to the datatypes IList and IDictionary.
             All numbers are parsed to doubles.
             </summary>
        </member>
        <member name="M:SoFunny.NativeInterface.Json.Deserialize(System.String)">
            <summary>
            Parses the string json into a value
            </summary>
            <param name="json">A JSON string.</param>
            <returns>An List&lt;object&gt;, a Dictionary&lt;string, object&gt;, a double, an integer,a string, null, true, or false</returns>
        </member>
        <member name="M:SoFunny.NativeInterface.Json.Serialize(System.Object)">
            <summary>
            Converts a IDictionary / IList object or a simple type (string, int, etc.) into a JSON string
            </summary>
            <param name="obj">A Dictionary&lt;string, object&gt; / List&lt;object&gt;</param>
            <returns>A JSON encoded string, or null if object 'json' is not serializable</returns>
        </member>
        <member name="P:SoFunny.PrivacyProfile.AuthPlatform">
            <summary>
            授权目标平台
            </summary>
        </member>
        <member name="P:SoFunny.PrivacyProfile.UserBirthday">
            <summary>
            用户出生日期
            </summary>
        </member>
        <member name="P:SoFunny.PrivacyProfile.UserSex">
            <summary>
            用户性别
            </summary>
        </member>
        <member name="T:SoFunny.UserProfile">
             <summary>
             Represents a user profile used in FunnySDK.
             </summary>
            
        </member>
        <member name="P:SoFunny.UserProfile.UserId">
            <summary>
            用户 ID
            </summary>
        </member>
        <member name="P:SoFunny.UserProfile.DisplayName">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:SoFunny.UserProfile.StatusMessage">
            <summary>
            状态消息
            </summary>
        </member>
        <member name="P:SoFunny.UserProfile.PictureUrl">
            <summary>
            用户头像
            </summary>
        </member>
        <member name="P:SoFunny.UserProfile.loginChannel">
            <summary>
            登录渠道
            </summary>
        </member>
        <member name="P:SoFunny.UserProfile.DisplayEmailOrPhone">
            <summary>
            账号可显示的 Email 或手机号
            </summary>
        </member>
        <member name="M:SoFunny.Utils.FunnyUtils.ShowTipsAlert(System.String,System.String)">
            <summary>
            显示系统弹窗提示
            </summary>
            <param name="title">标题</param>
            <param name="content">内容</param>
        </member>
        <member name="M:SoFunny.Utils.FunnyUtils.ShowToast(System.String,System.Single)">
            <summary>
            展示 Toast 提示
            </summary>
            <param name="message">消息内容</param>
            <param name="time">持续时间</param>
        </member>
    </members>
</doc>
